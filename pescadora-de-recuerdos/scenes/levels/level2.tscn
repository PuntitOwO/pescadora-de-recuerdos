[gd_scene load_steps=35 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://scenes/levels/background_color.gd" type="Script" id=2]
[ext_resource path="res://resources/materials/level1palette.tres" type="Texture" id=3]
[ext_resource path="res://scenes/character/fishing_rod.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/hook/hook.tscn" type="PackedScene" id=5]
[ext_resource path="res://resources/materials/screenspace_viewport.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/danger/void_tilemap.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/fishing_line/fishing_line.tscn" type="PackedScene" id=8]
[ext_resource path="res://scenes/hook/hook_camera.gd" type="Script" id=9]
[ext_resource path="res://scenes/collectables/object.tscn" type="PackedScene" id=10]
[ext_resource path="res://resources/sprites/character/boat.png" type="Texture" id=11]
[ext_resource path="res://resources/sprites/backgrounds/background_2.png" type="Texture" id=12]
[ext_resource path="res://resources/materials/level2palette.tres" type="Gradient" id=13]
[ext_resource path="res://resources/sprites/character/character_2.png" type="Texture" id=14]
[ext_resource path="res://scenes/levels/pregame_level1.gd" type="Script" id=16]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "Texture"

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D Texture;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Texture, n_out3p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -40, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -320, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 0, 0, 0, 2, 1, 0, 1 )

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("ParallaxViewport")

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/Texture = SubResource( 8 )

[sub_resource type="OccluderPolygon2D" id=10]
polygon = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )

[sub_resource type="ConvexPolygonShape2D" id=11]
points = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )

[sub_resource type="TileSet" id=12]
0/name = "icon.png 0"
0/texture = ExtResource( 1 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 64, 64 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/occluder = SubResource( 10 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 11 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 11 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0

[sub_resource type="Shader" id=16]
code = "shader_type canvas_item;
uniform sampler2D Colormap : hint_albedo;

void fragment() {
// Get the fragment location
	vec3 location = vec3(UV, 0.0);

// Get the colors from the image at specified location
	vec3 colorIn;
	float alphaIn;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, location.xy);
		colorIn = TEXTURE_tex_read.rgb;
		alphaIn = TEXTURE_tex_read.a;
	}

// get the greyscale value through the highest of r, g, and b
	float grey;
	{
		vec3 c = colorIn;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		grey = max2;
	}

// Read the colormap and use the greyscale value to map in the new color.
	vec3 colorOut;
	float alphaOut;
	{
		vec4 n_tex_read = texture(Colormap, vec2(grey, 0.0));
		colorOut = n_tex_read.rgb;
		alphaOut = n_tex_read.a;
	}

// Profit.
	COLOR.rgb = colorOut;
	COLOR.a = alphaIn;

}"

[sub_resource type="ShaderMaterial" id=17]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/Colormap = ExtResource( 3 )

[sub_resource type="CircleShape2D" id=13]
radius = 21.0

[sub_resource type="RectangleShape2D" id=18]
extents = Vector2( 32, 512 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 448, 32 )

[sub_resource type="Shader" id=20]
code = "shader_type canvas_item;
uniform sampler2D Colormap : hint_albedo;

void fragment() {
// Get the fragment location
	vec3 location = vec3(UV, 0.0);

// Get the colors from the image at specified location
	vec3 colorIn;
	float alphaIn;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, location.xy);
		colorIn = TEXTURE_tex_read.rgb;
		alphaIn = TEXTURE_tex_read.a;
	}

// get the greyscale value through the highest of r, g, and b
	float grey;
	{
		vec3 c = colorIn;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		grey = max2;
	}

// Read the colormap and use the greyscale value to map in the new color.
	vec3 colorOut;
	float alphaOut;
	{
		vec4 n_tex_read = texture(Colormap, vec2(grey, 0.0));
		colorOut = n_tex_read.rgb;
		alphaOut = n_tex_read.a;
	}

// Profit.
	COLOR.rgb = colorOut;
	COLOR.a = alphaIn;

}"

[sub_resource type="GradientTexture" id=23]
gradient = ExtResource( 13 )

[sub_resource type="ShaderMaterial" id=24]
resource_local_to_scene = true
shader = SubResource( 20 )
shader_param/Colormap = SubResource( 23 )

[sub_resource type="Animation" id=14]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("PreGameCamera:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 384, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("PreGameCamera:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -512, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "value"
tracks/2/path = NodePath("../../Camera2D:current")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Line2D:points")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ PoolVector2Array( 384, -400, 384, -22 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Line2D:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Boat:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 543, -370 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Character:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 483, -415 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Character:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("FishingRod:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 456, -391 ) ]
}

[sub_resource type="Animation" id=15]
resource_name = "StartScene"
length = 5.0
tracks/0/type = "bezier"
tracks/0/path = NodePath("PreGameCamera:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 384, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("PreGameCamera:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -512, -0.25, 0, 1, -5.17896, 512, -1, -12.7434, 0.25, 0 ),
"times": PoolRealArray( 2.5, 5 )
}
tracks/2/type = "value"
tracks/2/path = NodePath("../../Camera2D:current")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_start_game"
} ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("FishingRod")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "use" ],
"method": "start_animation"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Line2D:points")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 1.6, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ PoolVector2Array( 384, -400, 384, -400 ), PoolVector2Array( 384, -400, 384, -400 ), PoolVector2Array( 384, -400, 384, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Line2D:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=19]
resource_name = "idle"
length = 16.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Boat:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 4, 6, 8, 10, 12, 14 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 543, -370 ), Vector2( 543, -367 ), Vector2( 543, -370 ), Vector2( 543, -367 ), Vector2( 543, -370 ), Vector2( 543, -367 ), Vector2( 543, -370 ), Vector2( 543, -367 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Character:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.2, 2.3, 4.2, 6.3, 8.2, 10.3, 12.2, 14.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 483, -415 ), Vector2( 483, -412 ), Vector2( 483, -415 ), Vector2( 483, -412 ), Vector2( 483, -415 ), Vector2( 483, -412 ), Vector2( 483, -415 ), Vector2( 483, -412 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Character:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 10.5, 12.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 3, 3 ), Vector2( -3, 3 ), Vector2( 3, 3 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("FishingRod:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.2, 2.3, 4.2, 6.3, 8.2, 10.3, 12.2, 14.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 456, -391 ), Vector2( 456, -388 ), Vector2( 456, -391 ), Vector2( 456, -388 ), Vector2( 456, -391 ), Vector2( 456, -388 ), Vector2( 456, -391 ), Vector2( 456, -388 ) ]
}

[node name="Level2" type="Node2D"]

[node name="VoidTileMap" parent="." instance=ExtResource( 7 )]
material = SubResource( 9 )
tile_set = SubResource( 12 )
tile_data = PoolIntArray( 1048588, 0, 0, 1114121, 0, 0, 1114122, 0, 0, 1114124, 0, 0, 1179656, 0, 0, 1179657, 0, 0, 1179658, 0, 0, 1179659, 0, 0, 1179660, 0, 0, 1245192, 0, 0, 1245193, 0, 0, 1245194, 0, 0, 1245195, 0, 0, 1245196, 0, 0, 1310728, 0, 0, 1310729, 0, 0, 1310730, 0, 0, 1310732, 0, 0, 1376265, 0, 0, 1376266, 0, 0, 1376268, 0, 0, 1441804, 0, 0, 1507331, 0, 0, 1507340, 0, 0, 1572865, 0, 0, 1572866, 0, 0, 1572867, 0, 0, 1572868, 0, 0, 1572869, 0, 0, 1572876, 0, 0, 1638400, 0, 0, 1638401, 0, 0, 1638402, 0, 0, 1638403, 0, 0, 1638404, 0, 0, 1638405, 0, 0, 1638412, 0, 0, 1703936, 0, 0, 1703937, 0, 0, 1703938, 0, 0, 1703939, 0, 0, 1703940, 0, 0, 1703941, 0, 0, 1703942, 0, 0, 1703948, 0, 0, 1769473, 0, 0, 1769474, 0, 0, 1769475, 0, 0, 1769476, 0, 0, 1769477, 0, 0, 1769478, 0, 0, 1769484, 0, 0, 1835009, 0, 0, 1835010, 0, 0, 1835011, 0, 0, 1835020, 0, 0, 1900556, 0, 0, 1966092, 0, 0, 2031628, 0, 0, 2097164, 0, 0, 2162700, 0, 0, 2228236, 0, 0, 2293772, 0, 0, 2359308, 0, 0, 2424844, 0, 0, 2490380, 0, 0, 2555916, 0, 0, 2621452, 0, 0, 2686988, 0, 0, 2752524, 0, 0, 2818060, 0, 0, 2883596, 0, 0, 2949132, 0, 0, 3014668, 0, 0, 3080204, 0, 0, 3145740, 0, 0, 3211276, 0, 0, 3276812, 0, 0, 3342348, 0, 0, 3407884, 0, 0, 3473420, 0, 0, 3538956, 0, 0, 3604492, 0, 0, 3670028, 0, 0, 3735564, 0, 0, 3801100, 0, 0, 3866636, 0, 0, 3932172, 0, 0, 3997708, 0, 0, 4063244, 0, 0, 4128780, 0, 0, 4194316, 0, 0, 4259852, 0, 0, 4325388, 0, 0, 4390924, 0, 0, 4456460, 0, 0, 4521996, 0, 0, 4587532, 0, 0, 4653068, 0, 0, 4718604, 0, 0, 4784140, 0, 0, 4849676, 0, 0, 4915212, 0, 0, 4980748, 0, 0, 5046284, 0, 0, 5111820, 0, 0, 5177356, 0, 0, 5242892, 0, 0, 5308428, 0, 0, 5373964, 0, 0, 5439500, 0, 0, 5505036, 0, 0, 5570572, 0, 0, 5636108, 0, 0, 5701644, 0, 0 )

[node name="Enemies" type="Node2D" parent="."]

[node name="Collectables" type="Node2D" parent="."]

[node name="Object" parent="Collectables" instance=ExtResource( 10 )]
position = Vector2( 624, 1946 )

[node name="Object2" parent="Collectables" instance=ExtResource( 10 )]
position = Vector2( 120, 2402 )
image_index = 1

[node name="Object3" parent="Collectables" instance=ExtResource( 10 )]
position = Vector2( 120, 2402 )
image_index = 2
next_level = true

[node name="Hook" parent="." instance=ExtResource( 5 )]
position = Vector2( 384, 512 )

[node name="Sprite" parent="Hook" index="0"]
material = SubResource( 17 )

[node name="CollisionShape2D" parent="Hook" index="1"]
shape = SubResource( 13 )

[node name="FishingLine" parent="." instance=ExtResource( 8 )]
end_node_attached_path = NodePath("../Hook/LinePosition")
start_node_attached_path = NodePath("../Camera2D/Position2D")

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 384, 512 )
limit_left = 0
limit_top = 0
limit_right = 768
smoothing_enabled = true
drag_margin_left = 1.0
drag_margin_top = 0.0
drag_margin_right = 1.0
drag_margin_bottom = 0.0
editor_draw_drag_margin = true
script = ExtResource( 9 )
target_path = NodePath("../Hook")

[node name="Position2D" type="Position2D" parent="Camera2D"]
position = Vector2( 384, -704 )

[node name="LimitsX" type="StaticBody2D" parent="Camera2D"]
position = Vector2( 0, -544 )

[node name="CollisionLeft" type="CollisionShape2D" parent="Camera2D/LimitsX"]
position = Vector2( -416, 544 )
shape = SubResource( 18 )

[node name="CollisionRight" type="CollisionShape2D" parent="Camera2D/LimitsX"]
position = Vector2( 416, 544 )
shape = SubResource( 18 )

[node name="UpperLimit" type="StaticBody2D" parent="."]
position = Vector2( 384, -32 )

[node name="CollisionUp" type="CollisionShape2D" parent="UpperLimit"]
shape = SubResource( 7 )

[node name="ParallaxViewport" parent="." instance=ExtResource( 6 )]

[node name="CanvasLayer" type="CanvasLayer" parent="."]
follow_viewport_enable = true

[node name="PreGame" type="Node2D" parent="CanvasLayer"]
pause_mode = 2
script = ExtResource( 16 )

[node name="Background" type="Sprite" parent="CanvasLayer/PreGame"]
material = SubResource( 24 )
position = Vector2( 0, -1024 )
scale = Vector2( 3, 3 )
texture = ExtResource( 12 )
centered = false

[node name="PreGameCamera" type="Camera2D" parent="CanvasLayer/PreGame"]
position = Vector2( 384, -512 )
current = true

[node name="Line2D" type="Line2D" parent="CanvasLayer/PreGame"]
visible = false
points = PoolVector2Array( 384, -400, 384, -22 )
width = 3.0
default_color = Color( 1, 1, 1, 1 )

[node name="FishingRod" parent="CanvasLayer/PreGame" instance=ExtResource( 4 )]
position = Vector2( 456, -391 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/PreGame"]
autoplay = "idle"
anims/RESET = SubResource( 14 )
anims/StartScene = SubResource( 15 )
anims/idle = SubResource( 19 )

[node name="Character" type="Sprite" parent="CanvasLayer/PreGame"]
material = SubResource( 24 )
position = Vector2( 483, -415 )
scale = Vector2( 3, 3 )
texture = ExtResource( 14 )

[node name="Boat" type="Sprite" parent="CanvasLayer/PreGame"]
material = SubResource( 24 )
position = Vector2( 543, -370 )
scale = Vector2( 3, 3 )
texture = ExtResource( 11 )

[node name="GameBackground" type="CanvasLayer" parent="."]
layer = -3

[node name="ColorRect" type="ColorRect" parent="GameBackground"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.443137, 0.603922, 0.658824, 1 )
script = ExtResource( 2 )
initial_color_pos_path = NodePath("../InitialColor")
final_color_pos_path = NodePath("../FinalColor")
target_path = NodePath("../../Hook")
initial_color = Color( 0.443137, 0.603922, 0.658824, 1 )
final_color = Color( 0.121124, 0.143207, 0.164063, 1 )

[node name="InitialColor" type="Position2D" parent="GameBackground"]
position = Vector2( 0, 1024 )

[node name="FinalColor" type="Position2D" parent="GameBackground"]
position = Vector2( 0, 3200 )

[editable path="Hook"]
